(function (deps, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(deps, factory);
    }
})(["require", "exports"], function (require, exports) {
    {
        AnySchemaObject;
    }
    from;
    "../../types";
    {
        SchemaObjCxt;
    }
    from;
    "..";
    {
        JSONType, RuleGroup, Rule;
    }
    from;
    "../rules";
    function schemaHasRulesForType(_a, type) {
        var schema = _a.schema, self = _a.self;
        var group = self.RULES.types[type];
        return group && group !== true && shouldUseGroup(schema, group);
    }
    exports.schemaHasRulesForType = schemaHasRulesForType;
    function shouldUseGroup(schema, group) {
        return group.rules.some(function (rule) { return shouldUseRule(schema, rule); });
    }
    exports.shouldUseGroup = shouldUseGroup;
    function shouldUseRule(schema, rule) {
        return (schema[rule.keyword] !== undefined ||
            rule.definition.implements ? .some(function (kwd) { return schema[kwd] !== undefined; })
            :
        );
    }
    exports.shouldUseRule = shouldUseRule;
});
