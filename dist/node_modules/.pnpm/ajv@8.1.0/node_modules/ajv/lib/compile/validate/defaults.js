(function (deps, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(deps, factory);
    }
})(["require", "exports", "../codegen", "../util"], function (require, exports) {
    {
        SchemaObjCxt;
    }
    from;
    "..";
    var codegen_1 = require("../codegen");
    var util_1 = require("../util");
    function assignDefaults(it, ty) {
        var _a = it.schema, properties = _a.properties, items = _a.items;
        if (ty === "object" && properties) {
            for (var key in properties) {
                assignDefault(it, key, properties[key].default);
            }
        }
        else if (ty === "array" && Array.isArray(items)) {
            items.forEach(function (sch, i) { return assignDefault(it, i, sch.default); });
        }
    }
    exports.assignDefaults = assignDefaults;
    function assignDefault(it, prop, defaultValue) {
        var gen = it.gen, compositeRule = it.compositeRule, data = it.data, opts = it.opts;
        if (defaultValue === undefined)
            return;
        var childData = (_a = ["", "", ""], _a.raw = ["", "", ""], codegen_1._(_a, data, codegen_1.getProperty(prop)));
        if (compositeRule) {
            util_1.checkStrictMode(it, "default is ignored for: " + childData);
            return;
        }
        var condition = (_b = ["", " === undefined"], _b.raw = ["", " === undefined"], codegen_1._(_b, childData));
        if (opts.useDefaults === "empty") {
            condition = (_c = ["", " || ", " === null || ", " === \"\""], _c.raw = ["", " || ", " === null || ", " === \"\""], codegen_1._(_c, condition, childData, childData));
        }
        // `${childData} === undefined` +
        // (opts.useDefaults === "empty" ? ` || ${childData} === null || ${childData} === ""` : "")
        gen.if(condition, (_d = ["", " = ", ""], _d.raw = ["", " = ", ""], codegen_1._(_d, childData, codegen_1.stringify(defaultValue))));
        var _a, _b, _c, _d;
    }
});
