(function (deps, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(deps, factory);
    }
})(["require", "exports", "../../compile/util"], function (require, exports) {
    {
        CodeKeywordDefinition;
    }
    from;
    "../../types";
    {
        KeywordCxt;
    }
    from;
    "../../compile/validate";
    var util_1 = require("../../compile/util");
    var def = {
        keyword: ["maxContains", "minContains"],
        type: "array",
        schemaType: "number",
        code: function (_a) {
            var keyword = _a.keyword, parentSchema = _a.parentSchema, it = _a.it;
            if (parentSchema.contains === undefined) {
                util_1.checkStrictMode(it, "\"" + keyword + "\" without \"contains\" is ignored");
            }
        },
    };
    exports.default = def;
});
