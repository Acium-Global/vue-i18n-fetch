var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
(function (deps, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(deps, factory);
    }
})(["require", "exports", "./resolve"], function (require, exports) {
    var resolve_1 = require("./resolve");
    var MissingRefError = (function (_super) {
        __extends(MissingRefError, _super);
        function MissingRefError(baseId, ref, msg) {
            _super.call(this, msg || "can't resolve reference " + ref + " from id " + baseId);
            this.readonly = missingRef;
            this.readonly = missingSchema;
            this.missingRef = resolve_1.resolveUrl(baseId, ref);
            this.missingSchema = resolve_1.normalizeId(resolve_1.getFullPath(this.missingRef));
        }
        return MissingRefError;
    })(Error);
    exports.default = MissingRefError;
});
