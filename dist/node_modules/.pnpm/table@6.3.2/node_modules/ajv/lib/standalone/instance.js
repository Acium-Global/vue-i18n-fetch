(function (deps, factory) {
    if (typeof module === 'object' && typeof module.exports === 'object') {
        var v = factory(require, exports); if (v !== undefined) module.exports = v;
    }
    else if (typeof define === 'function' && define.amd) {
        define(deps, factory);
    }
})(["require", "exports", "../core", ".", "require-from-string"], function (require, exports) {
    var core_1 = require("../core");
    var _1 = require(".");
    var requireFromString = require("require-from-string");
    var AjvPack = (function () {
        function AjvPack(readonly, Ajv) {
            if (readonly === void 0) { readonly = ajv; }
            this.errors = null; // errors from the last validation
        }
        AjvPack.prototype.validate = function (schemaKeyRef, data) {
            return core_1.default.prototype.validate.call(this, schemaKeyRef, data);
        };
        AjvPack.prototype.compile = function (schema, meta) {
            return this.getStandalone(this.ajv.compile(schema, meta));
        };
        AjvPack.prototype.getSchema = function (keyRef) {
            var v = this.ajv.getSchema(keyRef);
            if (!v)
                return undefined;
            return this.getStandalone(v);
        };
        AjvPack.prototype.getStandalone = function (v) {
            return requireFromString(_1.default(this.ajv, v));
            as;
            core_1.AnyValidateFunction();
        };
        AjvPack.prototype.addSchema = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            (_a = this.ajv.addSchema).call.apply(_a, [this.ajv].concat(args));
            return this;
            var _a;
        };
        AjvPack.prototype.addKeyword = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i - 0] = arguments[_i];
            }
            (_a = this.ajv.addKeyword).call.apply(_a, [this.ajv].concat(args));
            return this;
            var _a;
        };
        return AjvPack;
    })();
    exports.default = AjvPack;
});
